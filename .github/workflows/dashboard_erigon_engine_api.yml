
name: Daily Run Erigon Engine API 

on:
  schedule:
    - cron: '0 0 * * *'  # Run every day at midnight UTC
  workflow_dispatch:
  push:
    branches:
      - refactoring-phase-2-erigon 
  pull_request:
    branches:
      - refactoring-phase-2-erigon 
    types: [ closed ]

jobs:
  hive-run:
    runs-on: hive
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: refactoring-phase-2-erigon

      - name: Set up Go cache directories
        run: |
          mkdir -p /root/.cache/go-build
          mkdir -p /root/go
          chmod -R 755 /root/.cache/go-build
          chmod -R 755 /root/go

      - name: Set Go environment variables
        run: |
          echo "GOCACHE=/root/.cache/go-build" >> $GITHUB_ENV
          echo "GOPATH=/root/go" >> $GITHUB_ENV
          echo "HOME=/root" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: stable
          cache: true
          cache-dependency-path: go.sum

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Linux packages
        run: |
          sudo apt-get update 
          sudo apt-get install -y libsnappy-dev libc6-dev libc6 build-essential

      - name: Set working directory
        run: |
          echo "Current directory: $(pwd)"
          ls -la

      - name: Download dependencies
        run: |
          go mod download
          go mod tidy

      - name: Build hive
        run: go build -v -o hive hive.go

      - name: Run Erigon Engine API tests
        continue-on-error: true
        run: |
          ./hive --sim ethereum/gnosis-engine-jq --sim.limit="engine-api" --client erigon-gnosis --results-root=${{ github.workspace }}/runs --loglevel=5 --client.checktimelimit=10m --docker.output --sim.parallelism=4 

      - name: Send file over SSH
        if: always()
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: ${{ github.workspace }}/runs/*
          target: ${{ secrets.DIR }}/
