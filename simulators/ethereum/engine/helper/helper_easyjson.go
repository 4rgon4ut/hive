// TEMPORARY AUTOGENERATED FILE: easyjson stub code to make the package
// compilable during generation.

package  helper

import (
  "github.com/mailru/easyjson/jwriter"
  "github.com/mailru/easyjson/jlexer"
)

func ( BaseTransactionCreator ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* BaseTransactionCreator ) UnmarshalJSON([]byte) error { return nil }
func ( BaseTransactionCreator ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* BaseTransactionCreator ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_BaseTransactionCreator *BaseTransactionCreator

func ( BigContractTransactionCreator ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* BigContractTransactionCreator ) UnmarshalJSON([]byte) error { return nil }
func ( BigContractTransactionCreator ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* BigContractTransactionCreator ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_BigContractTransactionCreator *BigContractTransactionCreator

func ( BigInitcodeTransactionCreator ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* BigInitcodeTransactionCreator ) UnmarshalJSON([]byte) error { return nil }
func ( BigInitcodeTransactionCreator ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* BigInitcodeTransactionCreator ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_BigInitcodeTransactionCreator *BigInitcodeTransactionCreator

func ( LoggingRoundTrip ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* LoggingRoundTrip ) UnmarshalJSON([]byte) error { return nil }
func ( LoggingRoundTrip ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* LoggingRoundTrip ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_LoggingRoundTrip *LoggingRoundTrip

func ( WaitTTDResponse ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* WaitTTDResponse ) UnmarshalJSON([]byte) error { return nil }
func ( WaitTTDResponse ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* WaitTTDResponse ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_WaitTTDResponse *WaitTTDResponse
